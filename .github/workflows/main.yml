name: Build and Push Docker to ECR

on:
  push:
    branches:
      - 'deploy'

jobs:
 build-and-push:
    name: Build and Push to ECR
    runs-on: ubuntu-latest
    steps:
      -
        name: Checkout
        uses: actions/checkout@v3
      - 
        name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-central-1
      -
        name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
      -
        name: Build, Tag, and Push the Image to Amazon ECR
        id: build-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: test-repo
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker build --target prod -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          echo "::set-output name=uri::$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"
      - 
        name: Download task definition
        run: |
          aws ecs describe-task-definition --task-definition test-task --query taskDefinition | jq -r 'del(
            .taskDefinitionArn,
            .requiresAttributes,
            .compatibilities,
            .revision,
            .status,
            .registeredAt,
            .registeredBy
          ) | .containerDefinitions[0].image = ${{ steps.build-image.outputs.uri }}' > task-definition.json
      - 
        name: Fill in the new image ID in the Amazon ECS task definition
        id: task-def
        uses: aws-actions/amazon-ecs-render-task-definition@v1
        with:
          task-definition: task-definition.json
          container-name: test-container
          image: ${{ steps.build-image.outputs.uri }}
      - 
        name: Get running Task
        id: get-task
        run: |
          echo "::set-output name=task::$(aws ecs list-tasks --cluster "test-cluster" --query taskArns[0])"
          echo ${{ steps.build-image.outputs.uri }}
          cat task-definition.json
      - 
        name: Stop running Task
        run: |
          aws ecs stop-task --task ${{ steps.get-task.outputs.task }} --cluster "test-cluster"
      - 
        name: Run Task on Amazon ECS
        uses: smitp/amazon-ecs-run-task@v1
        with:
          task-definition: task-definition.json
          cluster: test-cluster
          count: 1
          started-by: github-actions-${{ github.actor }}
          wait-for-finish: false
      -
        name: Log out of Amazon ECR
        if: always()
        run: docker logout ${{ steps.login-ecr.outputs.registry}}
